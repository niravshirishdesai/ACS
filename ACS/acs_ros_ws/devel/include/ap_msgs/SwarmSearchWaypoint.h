// Generated by gencpp from file ap_msgs/SwarmSearchWaypoint.msg
// DO NOT EDIT!


#ifndef AP_MSGS_MESSAGE_SWARMSEARCHWAYPOINT_H
#define AP_MSGS_MESSAGE_SWARMSEARCHWAYPOINT_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>

#include <autopilot_bridge/LLA.h>

namespace ap_msgs
{
template <class ContainerAllocator>
struct SwarmSearchWaypoint_
{
  typedef SwarmSearchWaypoint_<ContainerAllocator> Type;

  SwarmSearchWaypoint_()
    : recipientvehicle_id(0)
    , searchCell_x(0)
    , searchCell_y(0)
    , waypoint()  {
    }
  SwarmSearchWaypoint_(const ContainerAllocator& _alloc)
    : recipientvehicle_id(0)
    , searchCell_x(0)
    , searchCell_y(0)
    , waypoint(_alloc)  {
  (void)_alloc;
    }



   typedef uint8_t _recipientvehicle_id_type;
  _recipientvehicle_id_type recipientvehicle_id;

   typedef uint8_t _searchCell_x_type;
  _searchCell_x_type searchCell_x;

   typedef uint8_t _searchCell_y_type;
  _searchCell_y_type searchCell_y;

   typedef  ::autopilot_bridge::LLA_<ContainerAllocator>  _waypoint_type;
  _waypoint_type waypoint;




  typedef boost::shared_ptr< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> const> ConstPtr;

}; // struct SwarmSearchWaypoint_

typedef ::ap_msgs::SwarmSearchWaypoint_<std::allocator<void> > SwarmSearchWaypoint;

typedef boost::shared_ptr< ::ap_msgs::SwarmSearchWaypoint > SwarmSearchWaypointPtr;
typedef boost::shared_ptr< ::ap_msgs::SwarmSearchWaypoint const> SwarmSearchWaypointConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace ap_msgs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/indigo/share/nav_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'ap_msgs': ['/home/osboxes/ACS/acs_ros_ws/src/autonomy-payload/ap_msgs/msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg'], 'autopilot_bridge': ['/home/osboxes/ACS/acs_ros_ws/src/autopilot_bridge/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
{
  static const char* value()
  {
    return "e251703b3a9805e75514677c841efc23";
  }

  static const char* value(const ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0xe251703b3a9805e7ULL;
  static const uint64_t static_value2 = 0x5514677c841efc23ULL;
};

template<class ContainerAllocator>
struct DataType< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ap_msgs/SwarmSearchWaypoint";
  }

  static const char* value(const ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint8 recipientvehicle_id\n\
uint8 searchCell_x\n\
uint8 searchCell_y\n\
autopilot_bridge/LLA waypoint\n\
\n\
================================================================================\n\
MSG: autopilot_bridge/LLA\n\
float64 lat\n\
float64 lon\n\
float64 alt\n\
";
  }

  static const char* value(const ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.recipientvehicle_id);
      stream.next(m.searchCell_x);
      stream.next(m.searchCell_y);
      stream.next(m.waypoint);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER;
  }; // struct SwarmSearchWaypoint_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::ap_msgs::SwarmSearchWaypoint_<ContainerAllocator>& v)
  {
    s << indent << "recipientvehicle_id: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.recipientvehicle_id);
    s << indent << "searchCell_x: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.searchCell_x);
    s << indent << "searchCell_y: ";
    Printer<uint8_t>::stream(s, indent + "  ", v.searchCell_y);
    s << indent << "waypoint: ";
    s << std::endl;
    Printer< ::autopilot_bridge::LLA_<ContainerAllocator> >::stream(s, indent + "  ", v.waypoint);
  }
};

} // namespace message_operations
} // namespace ros

#endif // AP_MSGS_MESSAGE_SWARMSEARCHWAYPOINT_H
