// Generated by gencpp from file ap_srvs/SetIntegerRequest.msg
// DO NOT EDIT!


#ifndef AP_SRVS_MESSAGE_SETINTEGERREQUEST_H
#define AP_SRVS_MESSAGE_SETINTEGERREQUEST_H


#include <string>
#include <vector>
#include <map>

#include <ros/types.h>
#include <ros/serialization.h>
#include <ros/builtin_message_traits.h>
#include <ros/message_operations.h>


namespace ap_srvs
{
template <class ContainerAllocator>
struct SetIntegerRequest_
{
  typedef SetIntegerRequest_<ContainerAllocator> Type;

  SetIntegerRequest_()
    : setting(0)  {
    }
  SetIntegerRequest_(const ContainerAllocator& _alloc)
    : setting(0)  {
  (void)_alloc;
    }



   typedef uint32_t _setting_type;
  _setting_type setting;




  typedef boost::shared_ptr< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> const> ConstPtr;

}; // struct SetIntegerRequest_

typedef ::ap_srvs::SetIntegerRequest_<std::allocator<void> > SetIntegerRequest;

typedef boost::shared_ptr< ::ap_srvs::SetIntegerRequest > SetIntegerRequestPtr;
typedef boost::shared_ptr< ::ap_srvs::SetIntegerRequest const> SetIntegerRequestConstPtr;

// constants requiring out of line definition



template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const ::ap_srvs::SetIntegerRequest_<ContainerAllocator> & v)
{
ros::message_operations::Printer< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >::stream(s, "", v);
return s;
}

} // namespace ap_srvs

namespace ros
{
namespace message_traits
{



// BOOLTRAITS {'IsFixedSize': True, 'IsMessage': True, 'HasHeader': False}
// {'nav_msgs': ['/opt/ros/indigo/share/nav_msgs/cmake/../msg'], 'std_msgs': ['/opt/ros/indigo/share/std_msgs/cmake/../msg'], 'actionlib_msgs': ['/opt/ros/indigo/share/actionlib_msgs/cmake/../msg'], 'sensor_msgs': ['/opt/ros/indigo/share/sensor_msgs/cmake/../msg'], 'ap_msgs': ['/home/osboxes/ACS/acs_ros_ws/src/autonomy-payload/ap_msgs/msg'], 'geometry_msgs': ['/opt/ros/indigo/share/geometry_msgs/cmake/../msg'], 'autopilot_bridge': ['/home/osboxes/ACS/acs_ros_ws/src/autopilot_bridge/msg']}

// !!!!!!!!!!! ['__class__', '__delattr__', '__dict__', '__doc__', '__eq__', '__format__', '__getattribute__', '__hash__', '__init__', '__module__', '__ne__', '__new__', '__reduce__', '__reduce_ex__', '__repr__', '__setattr__', '__sizeof__', '__str__', '__subclasshook__', '__weakref__', '_parsed_fields', 'constants', 'fields', 'full_name', 'has_header', 'header_present', 'names', 'package', 'parsed_fields', 'short_name', 'text', 'types']




template <class ContainerAllocator>
struct IsFixedSize< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsFixedSize< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
  : TrueType
  { };

template <class ContainerAllocator>
struct IsMessage< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> const>
  : TrueType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
  : FalseType
  { };

template <class ContainerAllocator>
struct HasHeader< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> const>
  : FalseType
  { };


template<class ContainerAllocator>
struct MD5Sum< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "340dffc55dcd5acf86424b2679b5cac5";
  }

  static const char* value(const ::ap_srvs::SetIntegerRequest_<ContainerAllocator>&) { return value(); }
  static const uint64_t static_value1 = 0x340dffc55dcd5acfULL;
  static const uint64_t static_value2 = 0x86424b2679b5cac5ULL;
};

template<class ContainerAllocator>
struct DataType< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "ap_srvs/SetIntegerRequest";
  }

  static const char* value(const ::ap_srvs::SetIntegerRequest_<ContainerAllocator>&) { return value(); }
};

template<class ContainerAllocator>
struct Definition< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
{
  static const char* value()
  {
    return "uint32 setting\n\
";
  }

  static const char* value(const ::ap_srvs::SetIntegerRequest_<ContainerAllocator>&) { return value(); }
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

  template<class ContainerAllocator> struct Serializer< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
  {
    template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
    {
      stream.next(m.setting);
    }

    ROS_DECLARE_ALLINONE_SERIALIZER;
  }; // struct SetIntegerRequest_

} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::ap_srvs::SetIntegerRequest_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const ::ap_srvs::SetIntegerRequest_<ContainerAllocator>& v)
  {
    s << indent << "setting: ";
    Printer<uint32_t>::stream(s, indent + "  ", v.setting);
  }
};

} // namespace message_operations
} // namespace ros

#endif // AP_SRVS_MESSAGE_SETINTEGERREQUEST_H
